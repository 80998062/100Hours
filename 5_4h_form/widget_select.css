.widget select,
.no-widget .select {
    /* This CSS selector basically says:
       - either we have set the body class to "widget" and thus we hide the actual <select> element
       - or we have not changed the body class, therefore the body class is still "no-widget",
         so the elements whose class is "select" must be hidden */
    position: absolute;
    left: -5000em;
    height: 0;
    overflow: hidden;
}

.select {
    position: relative;
    display: inline-block;

    font-size: 0.625em;
    font-family: Verdana, Arial, Sans-serif, serif;

    box-sizing: border-box;
    -moz-box-sizing: border-box;

    padding: .1em 2.5em .2em .5em;
    width: 10em;

    border: .2em solid #000;
    border-radius: .4em;
    box-shadow: 0 .1em .2em rgba(0, 0, 0, .45);

    background: #f0f0f0;
    background: -webkit-linear-gradient(90deg, #E3E3E3, #fcfcfc 50%, #f0f0f0);
    background: linear-gradient(0deg, #E3E3E3, #fcfcfc 50%, #f0f0f0);
}

.select.active,
.select.focus {
    outline: none;

    box-shadow: 0 0 3px 1px #227755;
}

/* 这里的 .select 选择器是一个语法糖，用来确保我们定义的类是
   在我们的组件里的那个。 */
.select .optList {
    position: absolute;
    top: 100%;
    left: 0;
}

.select .optList.hidden {
    max-height: 0;
    visibility: hidden;
}

.select .value {
    /* Because the value can be wider than our widget, we have to make sure it will not
       change the widget's width */
    display: inline-block;
    width: 100%;
    overflow: hidden;

    vertical-align: top;

    /* And if the content overflows, it's better to have a nice ellipsis. */
    white-space: nowrap;
    text-overflow: ellipsis;
}

.select:after {
    content: "▼"; /* We use the unicode caracter U+25BC; see http://www.utf8-chartable.de */
    position: absolute;
    z-index: 1;
    top: 0;
    right: 0;

    -moz-box-sizing: border-box;
    box-sizing: border-box;

    height: 100%;
    width: 2em; /* 20px */
    padding-top: .1em; /* 1px */

    border-left: .2em solid #000; /* 2px */
    border-radius: 0 .1em .1em 0; /* 0 1px 1px 0 */

    background-color: #000;
    color: #FFF;
    text-align: center;
}

.select .optList {
    z-index: 2; /* We explicitly said the list of options will always overlap the down arrow */

    /* this will reset the default style of the ul element */
    list-style: none;
    margin: 0;
    padding: 0;

    -moz-box-sizing: border-box;
    box-sizing: border-box;

    /* This will ensure that even if the values are smaller than the widget,
       the list of options will be as large as the widget itself */
    min-width: 100%;

    /* In case the list is too long, its content will overflow vertically
       (which will add a vertical scrollbar automatically) but never horizontally
       (because we haven't set a width, the list will adjust its width automatically.
       If it can't, the content will be truncated) */
    max-height: 10em; /* 100px */
    overflow-y: auto;
    overflow-x: hidden;

    border: .2em solid #000; /* 2px */
    border-top-width: .1em; /* 1px */
    border-radius: 0 0 .4em .4em; /* 0 0 4px 4px */

    box-shadow: 0 .2em .4em rgba(0, 0, 0, .4); /* 0 2px 4px */
    background: #f0f0f0;
}

.select .option {
    padding: .2em .3em; /* 2px 3px */
}

.select .highlight {
    background: #000;
    color: #FFFFFF;
}

.option:hover {
    background: deepskyblue;
    color: white;
}