{"version":3,"sources":["../../5_4h/wdiget_select.js"],"names":["NodeList","prototype","forEach","callback","Array","call","deactivateSelect","select","classList","contains","optList","querySelector","add","remove","activateSelect","selectList","toggleOptList","toggle","hightlightOption","option","optionList","querySelectorAll"],"mappings":";;AAAAA,SAASC,SAAT,CAAmBC,OAAnB,GAA6B,UAAUC,QAAV,EAAoB;AAC7CC,UAAMH,SAAN,CAAgBC,OAAhB,CAAwBG,IAAxB,CAA6B,IAA7B,EAAmCF,QAAnC;AACH,CAFD;;AAIA;AACA;AACA;AACA,SAASG,gBAAT,CAA0BC,MAA1B,EAAkC;AAC9B,QAAI,CAACA,OAAOC,SAAP,CAAiBC,QAAjB,CAA0B,QAA1B,CAAL,EAA0C;;AAE1C,QAAIC,UAAUH,OAAOI,aAAP,CAAqB,UAArB,CAAd;AACAD,YAAQF,SAAR,CAAkBI,GAAlB,CAAsB,QAAtB;;AAEAL,WAAOC,SAAP,CAAiBK,MAAjB,CAAwB,QAAxB;AACH;;AAED;AACA;AACA;AACA;AACA,SAASC,cAAT,CAAwBP,MAAxB,EAAgCQ,UAAhC,EAA4C;AACxC,QAAIR,OAAOC,SAAP,CAAiBC,QAAjB,CAA0B,QAA1B,CAAJ,EAAyC;;AAEzCM,eAAWb,OAAX,CAAmBI,gBAAnB;;AAEAC,WAAOC,SAAP,CAAiBI,GAAjB,CAAqB,QAArB;AACH;;AAED,SAASI,aAAT,CAAuBT,MAAvB,EAA+B;AAC3B,QAAIG,UAAUH,OAAOI,aAAP,CAAqB,UAArB,CAAd;AACAD,YAAQF,SAAR,CAAkBS,MAAlB,CAAyB,QAAzB;AACH;;AAGD;AACA;AACA;AACA;;AAEA,SAASC,gBAAT,CAA0BX,MAA1B,EAAkCY,MAAlC,EAA0C;AACtC;;AAEA,QAAIC,aAAab,OAAOc,gBAAP,CAAwB,SAAxB,CAAjB;AAEH","file":"wdiget_select.js","sourcesContent":["NodeList.prototype.forEach = function (callback) {\n    Array.prototype.forEach.call(this, callback);\n};\n\n// This function will be used each time we want to deactivate a custom widget\n// It takes one parameter\n// select : the DOM node with the `select` class to deactivate\nfunction deactivateSelect(select) {\n    if (!select.classList.contains('active')) return;\n\n    let optList = select.querySelector('.optList');\n    optList.classList.add('hidden');\n\n    select.classList.remove('active')\n}\n\n// This function will be used each time the user wants to (de)activate the widget\n// It takes two parameters:\n// select : the DOM node with the `select` class to activate\n// selectList : the list of all the DOM nodes with the `select` class\nfunction activateSelect(select, selectList) {\n    if (select.classList.contains('active')) return;\n\n    selectList.forEach(deactivateSelect);\n\n    select.classList.add('active');\n}\n\nfunction toggleOptList(select) {\n    let optList = select.querySelector('.optList');\n    optList.classList.toggle('hidden');\n}\n\n\n// This function will be used each time we need to highlight an option\n// It takes two parameters:\n// select : the DOM node with the `select` class containing the option to highlight\n// option : the DOM node with the `option` class to highlight\n\nfunction hightlightOption(select, option) {\n    // We get the list of all option available for our custom select element\n\n    let optionList = select.querySelectorAll('.option')\n\n}"]}