{"version":3,"sources":["../../5_4h/widget_select.js"],"names":["NodeList","prototype","forEach","callback","Array","call","deactivateSelect","select","classList","contains","optList","querySelector","add","remove","activateSelect","selectList","toggleOptList","toggle","highlightOption","option","optionList","querySelectorAll","other","window","addEventListener","form","document","selectedIndex","getIndex","tabIndex","previousElementSibling","updateValue","index","event","length","keyCode","nativeWidget","value","innerHTML"],"mappings":"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","file":"widget_select.js","sourcesContent":["NodeList.prototype.forEach = function (callback) {\n    Array.prototype.forEach.call(this, callback);\n};\n\n// This function will be used each time we want to deactivate a custom widget\n// It takes one parameter\n// select : the DOM node with the `select` class to deactivate\nfunction deactivateSelect(select) {\n    if (!select.classList.contains('active')) return;\n\n    let optList = select.querySelector('.optList');\n    optList.classList.add('hidden');\n\n    select.classList.remove('active')\n}\n\n// This function will be used each time the user wants to (de)activate the widget\n// It takes two parameters:\n// select : the DOM node with the `select` class to activate\n// selectList : the list of all the DOM nodes with the `select` class\nfunction activateSelect(select, selectList) {\n    if (select.classList.contains('active')) return;\n\n    selectList.forEach(deactivateSelect);\n\n    select.classList.add('active');\n}\n\nfunction toggleOptList(select) {\n    let optList = select.querySelector('.optList');\n    optList.classList.toggle('hidden');\n}\n\n\n// This function will be used each time we need to highlight an option\n// It takes two parameters:\n// select : the DOM node with the `select` class containing the option to highlight\nfunction highlightOption(select, option) {\n    // We get the list of all option available for our custom select element\n\n    let optionList = select.querySelectorAll('.option');\n\n    // We remove the highlight from all options\n    optionList.forEach(function (other) {\n        other.classList.remove('highlight');\n    });\n\n    // We highlight the right option\n    option.classList.add('highlight');\n}\n\n\nwindow.addEventListener(\"load\", function () {\n    let form = document.querySelector('form');\n\n    form.classList.remove(\"no-widget\");\n    form.classList.add(\"widget\");\n});\n\n// We handle the event binding when the document is loaded.\nwindow.addEventListener('load', function () {\n    let selectList = document.querySelectorAll('.select');\n\n    selectList.forEach(function (select) {\n\n        let optionList = select.querySelectorAll('.option'),\n            selectedIndex = getIndex(select);\n        //\n        select.tabIndex = 0;\n\n        // 确保原生组件将永远不会获得焦点，\n        // 而且还可以确保当用户用户使用键盘和鼠标时，我们的自定义组件能够获得焦点。\n        select.previousElementSibling.tabIndex = -1;\n\n        // We make sure that the default selected value is correctly displayed\n        updateValue(select, selectedIndex);\n\n        optionList.forEach(function (option, index) {\n            option.addEventListener('click', function () {\n                updateValue(select, index)\n            })\n        });\n\n        select.addEventListener('keyup', function (event) {\n            let length = optionList.length,\n                index = getIndex(select);\n\n            // When the user hit the down arrow, we jump to the next option\n            if (40 === event.keyCode && index < length - 1) {\n                updateValue(select, --index);\n            } else if (38 === event.keyCode && index > 0) {\n                updateValue(select, ++index);\n            }\n        });\n\n        select.addEventListener('click', function () {\n            toggleOptList(select)\n        });\n\n        select.addEventListener('focus', function () {\n            activateSelect(select, selectList);\n        });\n\n        // in case the widget lose focus\n        select.addEventListener('blur', function () {\n            deactivateSelect(select);\n        });\n\n    })\n\n});\n\n\n// This function updates the displayed value and synchronizes it with the native widget.\n// It takes two parameters:\n// select : the DOM node with the class `select` containing the value to update\n// index  : the index of the value to be selected\nfunction updateValue(select, index) {\n    let nativeWidget = select.previousElementSibling;\n\n    let value = select.querySelector('.value');\n\n    let optionList = select.querySelectorAll('.option');\n\n    nativeWidget.selectedIndex = index;\n\n    value.innerHTML = optionList[index].innerHTML;\n\n    highlightOption(select, optionList[index]);\n}\n\n// This function returns the current selected index in the native widget\n// It takes one parameter:\n// select : the DOM node with the class `select` related to the native widget\nfunction getIndex(select) {\n    let nativeWidget = select.previousElementSibling;\n    return nativeWidget.selectedIndex;\n}\n"]}